{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi\\\\Downloads\\\\SmartServ-Task 1\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ProductList from \"./ProductList\";\nimport Product from \"./Product\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://s3.amazonaws.com/open-to-cors/assignment.json\");\n        const data = await response.json();\n        console.log(\"Fetched data:\", data);\n        if (data && data.products) {\n          // Extract products from the data object\n          const productData = Object.values(data.products);\n\n          // Map JSON data to Product instances\n          const productInstances = productData.map(item => {\n            return new Product(item.subcategory, item.title, item.price, item.popularity);\n          });\n          setProducts(productInstances);\n        } else {\n          console.error(\"Invalid data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ProductList","Product","jsxDEV","_jsxDEV","App","_s","products","setProducts","fetchData","response","fetch","data","json","console","log","productData","Object","values","productInstances","map","item","subcategory","title","price","popularity","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Rishi/Downloads/SmartServ-Task 1/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ProductList from \"./ProductList\";\nimport Product from \"./Product\";\nimport \"../styles/styles.css\";\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://s3.amazonaws.com/open-to-cors/assignment.json\",\n        );\n        const data = await response.json();\n        console.log(\"Fetched data:\", data);\n\n        if (data && data.products) {\n          // Extract products from the data object\n          const productData = Object.values(data.products);\n\n          // Map JSON data to Product instances\n          const productInstances = productData.map((item) => {\n            return new Product(\n              item.subcategory,\n              item.title,\n              item.price,\n              item.popularity,\n            );\n          });\n\n          setProducts(productInstances);\n        } else {\n          console.error(\"Invalid data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Product List</h1>\n      {products.length > 0 ? (\n        <ProductList products={products} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAElC,IAAIA,IAAI,IAAIA,IAAI,CAACL,QAAQ,EAAE;UACzB;UACA,MAAMS,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACN,IAAI,CAACL,QAAQ,CAAC;;UAEhD;UACA,MAAMY,gBAAgB,GAAGH,WAAW,CAACI,GAAG,CAAEC,IAAI,IAAK;YACjD,OAAO,IAAInB,OAAO,CAChBmB,IAAI,CAACC,WAAW,EAChBD,IAAI,CAACE,KAAK,EACVF,IAAI,CAACG,KAAK,EACVH,IAAI,CAACI,UACP,CAAC;UACH,CAAC,CAAC;UAEFjB,WAAW,CAACW,gBAAgB,CAAC;QAC/B,CAAC,MAAM;UACLL,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEd,IAAI,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBxB,QAAQ,CAACyB,MAAM,GAAG,CAAC,gBAClB5B,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnC3B,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhDID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}